This is the Buildroot support for Zylaser boards.

Currently, three boards are natively supported by Buildroot:
 - Zylaser board (zylasesr_defconfig)

Steps to create a working system for a Zylaser board:

1) Configuration (do one of the following)
    make zylaser_defconfig     (Zylaser)
2) make
3) All needed files will be available in the output/images directory.
   The sdcard.img file is a complete bootable image ready to be written
   on the boot medium. To install it, simply copy the image to an SD
   card:

       # dd if=output/images/sdcard.img of=/dev/sdX

   Where 'sdX' is the device node of the uSD.
4) boot your board

You can alter the booting procedure by creating a file uEnv.txt
in the root of the SD card. It is a plain text file in format
<key>=<value> one per line:

kernel_image=myimage
modeboot=myboot
myboot=...

Custom ps7_init_gpl.c/h support:

To generate a working boot.bin image, ps7_init_gpl.c/h are required in
the U-Boot source tree. Without those files, boot.bin will be built
successfully but it will not be functional at all. Those files are
output from the Xilinx tools, but for convenience, U-Boot includes the
default ps7_init_gpl.c/h of popular boards. Those files may need to be
updated for any programmable logic customizations which impact
ps7_init (clock/pin setup & mapping/AXI bridge setup/etc). See
board/xilinx/zynq/ directory of U-Boot for natively supported ps7_init
files. If the ps7_init files for your board are not found in U-Boot,
you need to add them by yourself.

1) Start with a defconfig supported by Buildroot (e.g. Zylaser)
    make zylaser_defconfig

2) make uboot-menuconfig
    Visit the following menu and enable CONFIG_ZYNQ_CUSTOM_INIT.

    ARM architecture  --->
       [*] Use custom ps7_init provided by Xilinx tool

3) Copy ps7_init_gpl.c/h generated by the Xilinx tools into
   output/build/uboot-xilinx-<pkg version>/board/xilinx/zynq/custom_hw_platform/

4) make

Note: The files in step 3 will need to be re-copied after cleaning the
output directory and at this time, there is no way to save them as
part of the buildroot configuration, except as a U-Boot patch.
