From 2dbd9d948dc35dfd6b63f3fc7b79a8b0d6c66c07 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Aur=C3=A9lien=20Zanelli?= <aurelien.zanelli@parrot.com>
Date: Tue, 6 May 2014 16:14:07 +0200
Subject: [PATCH 08/12] v4l2src: fix bufferpool leak in decide_allocation()

gst_query_parse_nth_allocation_pool() ref the pool it returns and
gst_query_set_nth_allocation_pool()/gst_query_add_allocation_pool are
transfert none.
So when we replace it by our own pool in DMA/MMAP/USERPTR cases, we
must unref the one given by gst_query_parse_nth_allocation_pool().
In all cases, pool should be unref at the end so to make it clear, we
also ref our own pool when using it.

https://bugzilla.gnome.org/show_bug.cgi?id=728490
---
 sys/v4l2/gstv4l2src.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/sys/v4l2/gstv4l2src.c b/sys/v4l2/gstv4l2src.c
index f0fcb353d..c1e7575bb 100644
--- a/sys/v4l2/gstv4l2src.c
+++ b/sys/v4l2/gstv4l2src.c
@@ -508,7 +508,7 @@ gst_v4l2src_decide_allocation (GstBaseSrc * bsrc, GstQuery * query)
         /* no downstream pool, use our own then */
         GST_DEBUG_OBJECT (src,
             "read/write mode: no downstream pool, using our own");
-        pool = GST_BUFFER_POOL_CAST (obj->pool);
+        pool = gst_object_ref (obj->pool);
         size = obj->sizeimage;
       } else {
         /* in READ/WRITE mode, prefer a downstream pool because our own pool
@@ -524,7 +524,9 @@ gst_v4l2src_decide_allocation (GstBaseSrc * bsrc, GstQuery * query)
     case GST_V4L2_IO_USERPTR:
     case GST_V4L2_IO_DMABUF:
       /* in streaming mode, prefer our own pool */
-      pool = GST_BUFFER_POOL_CAST (obj->pool);
+      if (pool)
+        gst_object_unref (pool);
+      pool = gst_object_ref (obj->pool);
       size = obj->sizeimage;
       GST_DEBUG_OBJECT (src,
           "streaming mode: using our own pool %" GST_PTR_FORMAT, pool);
@@ -558,6 +560,9 @@ gst_v4l2src_decide_allocation (GstBaseSrc * bsrc, GstQuery * query)
   else
     gst_query_add_allocation_pool (query, pool, size, min, max);
 
+  if (pool)
+    gst_object_unref (pool);
+
   return GST_BASE_SRC_CLASS (parent_class)->decide_allocation (bsrc, query);
 }
 
-- 
2.19.0

