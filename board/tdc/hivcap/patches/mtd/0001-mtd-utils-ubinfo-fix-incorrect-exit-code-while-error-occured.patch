--- mtd-1.5.2/ubi-utils/ubinfo.c.orig	2017-01-12 16:04:21.060348516 +0800
+++ mtd-1.5.2/ubi-utils/ubinfo.c	2017-01-12 16:30:34.476630548 +0800
@@ -150,7 +150,7 @@
 	err = ubi_probe_node(libubi, node);
 	if (err == -1) {
 		if (errno != ENODEV)
-			return sys_errmsg("error while probing \"%s\"", node);
+			sys_errmsg_die("error while probing \"%s\"", node);
 		return errmsg("\"%s\" does not correspond to any UBI device or volume", node);
 	}
 
@@ -159,7 +159,7 @@
 
 		err = ubi_get_dev_info(libubi, node, &dev_info);
 		if (err)
-			return sys_errmsg("cannot get information about UBI device \"%s\"", node);
+			sys_errmsg_die("cannot get information about UBI device \"%s\"", node);
 
 		args.devn = dev_info.dev_num;
 	} else {
@@ -167,7 +167,7 @@
 
 		err = ubi_get_vol_info(libubi, node, &vol_info);
 		if (err)
-			return sys_errmsg("cannot get information about UBI volume \"%s\"", node);
+			sys_errmsg_die("cannot get information about UBI volume \"%s\"", node);
 
 		if (args.vol_id != -1)
 			return errmsg("both volume character device node (\"%s\") and "
@@ -188,7 +188,7 @@
 
 	err = ubi_get_vol_info1_nm(libubi, dev_num, name, &vol_info);
 	if (err)
-		return sys_errmsg("cannot get information about volume \"%s\" on ubi%d\n", name, dev_num);
+		sys_errmsg_die("cannot get information about volume \"%s\" on ubi%d\n", name, dev_num);
 
 	args.vol_id = vol_info.vol_id;
 
@@ -202,8 +202,8 @@
 
 	err = ubi_get_vol_info1(libubi, dev_num, vol_id, &vol_info);
 	if (err)
-		return sys_errmsg("cannot get information about UBI volume %d on ubi%d",
-				  vol_id, dev_num);
+		sys_errmsg_die("cannot get information about UBI volume %d on ubi%d",
+			       vol_id, dev_num);
 
 	printf("Volume ID:   %d (on ubi%d)\n", vol_info.vol_id, vol_info.dev_num);
 	printf("Type:        %s\n",
@@ -235,7 +235,7 @@
 
 	err = ubi_get_dev_info1(libubi, dev_num, &dev_info);
 	if (err)
-		return sys_errmsg("cannot get information about UBI device %d", dev_num);
+		sys_errmsg_die("cannot get information about UBI device %d", dev_num);
 
 	printf("ubi%d\n", dev_info.dev_num);
 	printf("Volumes count:                           %d\n", dev_info.vol_count);
@@ -271,8 +271,8 @@
 			if (errno == ENOENT)
 				continue;
 
-			return sys_errmsg("libubi failed to probe volume %d on ubi%d",
-					  i, dev_info.dev_num);
+			sys_errmsg_die("libubi failed to probe volume %d on ubi%d",
+				       i, dev_info.dev_num);
 		}
 
 		if (!first)
@@ -299,8 +299,8 @@
 			if (errno == ENOENT)
 				continue;
 
-			return sys_errmsg("libubi failed to probe volume %d on ubi%d",
-					  i, dev_info.dev_num);
+			sys_errmsg_die("libubi failed to probe volume %d on ubi%d",
+				       i, dev_info.dev_num);
 		}
 		first = 0;
 
@@ -320,7 +320,7 @@
 
 	err = ubi_get_info(libubi, &ubi_info);
 	if (err)
-		return sys_errmsg("cannot get UBI information");
+		sys_errmsg_die("cannot get UBI information");
 
 	printf("UBI version:                    %d\n", ubi_info.version);
 	printf("Count of UBI devices:           %d\n", ubi_info.dev_count);
@@ -342,7 +342,7 @@
 				continue;
 
 			printf("\n");
-			return sys_errmsg("libubi failed to probe UBI device %d", i);
+			sys_errmsg_die("libubi failed to probe UBI device %d", i);
 		}
 
 		if (!first)
@@ -387,7 +387,7 @@
 	if (!libubi) {
 		if (errno == 0)
 			return errmsg("UBI is not present in the system");
-		return sys_errmsg("cannot open libubi");
+		sys_errmsg_die("cannot open libubi");
 	}
 
 	if (args.node) {
